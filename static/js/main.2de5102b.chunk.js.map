{"version":3,"sources":["services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","components/Homepage.jsx","images/cryptocurrency.png","components/Navbar.jsx","services/cryptoNewsApi.js","components/News.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["cryptoApiHeaders","process","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","concat","getCryptoDetails","coinId","getCryptoHistory","_ref","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","Loader","_jsx","className","children","Spin","Cryptocurrencies","simplified","data","cryptosList","isFetching","cryptos","setCryptos","useState","searchTerm","setSearchTerm","useEffect","_cryptosList$data","_cryptosList$data2","coins","filteredData","filter","item","name","toLowerCase","includes","_jsxs","_Fragment","Input","placeholder","onChange","e","target","value","Row","gutter","map","currency","Col","xs","sm","lg","Link","to","uuid","Card","title","rank","extra","src","iconUrl","hoverable","millify","price","marketCap","change","Title","Typography","Homepage","_data$data","globalStats","stats","level","span","Statistic","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Navbar","activeMenu","setActiveMenu","screenSize","setScreenSize","undefined","handleResize","window","innerWidth","addEventListener","removeEventListener","Avatar","icon","size","Button","onClick","MenuOutlined","Menu","theme","Item","HomeOutlined","FundOutlined","BulbOutlined","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","Text","Option","Select","News","_data$data$coins","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","indexOf","news","i","_news$image","_news$image$thumbnail","_news$provider$","_news$provider$$image","_news$provider$$image2","_news$provider$2","href","rel","image","thumbnail","contentUrl","alt","description","length","substring","provider","moment","datePublished","startOf","fromNow","LineChart","_coinHistory$data5","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","_coinHistory$data","_coinHistory$data$his","history","_coinHistory$data2","push","_coinHistory$data3","_coinHistory$data3$hi","_coinHistory$data4","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","Line","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","_cryptoDetails$allTim","_cryptoDetails$allTim2","_cryptoDetails$supply","_cryptoDetails$supply2","_cryptoDetails$supply3","_cryptoDetails$supply4","_cryptoDetails$supply5","_data$data2","_data$data3","_cryptoDetails$links","useParams","setTimeperiod","cryptoDetails","coin","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","MoneyCollectOutlined","supply","confirmed","CheckOutlined","StopOutlined","ExclamationCircleOutlined","circulating","symbol","defaultValue","date","_ref2","HTMLReactParser","links","link","type","App","Layout","Switch","Route","exact","path","style","color","textAlign","Space","configureStore","reducer","ReactDOM","render","React","StrictMode","Router","Provider","store","document","getElementById"],"mappings":"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","file":"static/js/main.2de5102b.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\n// Note: Change v1 to v2 on rapid api\n\nconst cryptoApiHeaders = {\n  'x-rapidapi-host': process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST,\n  'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\n};\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_CRYPTO_API_URL }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n\n    // Note: Change the coin price history endpoint from this - `coin/${coinId}/history/${timeperiod} to this - `coin/${coinId}/history?timeperiod=${timeperiod}`\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history?timeperiod=${timeperiod}`),\n    }),\n\n    // Note: To access this endpoint you need premium plan\n    // getExchanges: builder.query({\n    //   query: () => createRequest('/exchanges'),\n    // }),\n  }),\n});\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetExchangesQuery,\n  useGetCryptoHistoryQuery,\n} = cryptoApi;\n","import React from 'react';\nimport { Spin } from 'antd';\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Spin />\n  </div>\n);\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    setCryptos(cryptosList?.data?.coins);\n\n    const filteredData = cryptosList?.data?.coins.filter((item) => item.name.toLowerCase().includes(searchTerm));\n\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Cryptocurrency\"\n            onChange={(e) => setSearchTerm(e.target.value.toLowerCase())}\n          />\n        </div>\n      )}\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col\n            xs={24}\n            sm={12}\n            lg={6}\n            className=\"crypto-card\"\n            key={currency.uuid}\n          >\n\n            {/* Note: Change currency.id to currency.uuid  */}\n            <Link key={currency.uuid} to={`/crypto/${currency.uuid}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\n                hoverable\n              >\n                <p>Price: {millify(currency.price)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>Daily Change: {currency.change}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n","import React from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport Cryptocurrencies from './Cryptocurrencies';\nimport Loader from './Loader';\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Title level={2} className=\"heading\">Global Crypto Stats</Title>\n      <Row gutter={[32, 32]}>\n        <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\n        <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\n        <Col span={12}><Statistic title=\"Total Market Cap:\" value={`$${millify(globalStats.totalMarketCap)}`} /></Col>\n        <Col span={12}><Statistic title=\"Total 24h Volume\" value={`$${millify(globalStats.total24hVolume)}`} /></Col>\n        <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\n        <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} /></Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">Top 10 Cryptos In The World</Title>\n        <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show more</Link></Title>\n      </div>\n      <Cryptocurrencies simplified />\n    </>\n  );\n};\n\nexport default Homepage;\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\n\nimport icon from '../images/cryptocurrency.png';\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\"><Link to=\"/\">CryptoGalaxy</Link></Typography.Title>\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\n      </div>\n      {activeMenu && (\n      <Menu theme=\"dark\">\n        <Menu.Item icon={<HomeOutlined />}>\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n        <Menu.Item icon={<FundOutlined />}>\n          <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n        </Menu.Item>\n        <Menu.Item icon={<BulbOutlined />}>\n          <Link to=\"/news\">News</Link>\n        </Menu.Item>\n      </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoNewsHeaders = {\n  'x-bingapis-sdk': 'true',\n  'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\n  'x-rapidapi-host': process.env.REACT_APP_NEWS_RAPIDAPI_HOST,\n};\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: 'cryptoNewsApi',\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_NEWS_API_URL }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import React, { useState } from 'react';\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\nimport moment from 'moment';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\nimport Loader from './Loader';\n\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\n  const { data } = useGetCryptosQuery(100);\n  const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 });\n\n  if (!cryptoNews?.value) return <Loader />;\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n          >\n            <Option value=\"Cryptocurency\">Cryptocurrency</Option>\n            {data?.data?.coins?.map((currency) => <Option value={currency.name}>{currency.name}</Option>)}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>{news.name}</Title>\n                <img src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\n              </div>\n              <p>{news.description.length > 100 ? `${news.description.substring(0, 100)}...` : news.description}</p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\n                  <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\n                </div>\n                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;\n","\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory?.data?.history[i].price);\n  }\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\n  }\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: 'Price In USD',\n        data: coinPrice,\n        fill: false,\n        backgroundColor: '#0071bd',\n        borderColor: '#0071bd',\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\n\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\nimport LineChart from './LineChart';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timeperiod, setTimeperiod] = useState('7d');\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\n  const cryptoDetails = data?.data?.coin;\n\n  if (isFetching) return <Loader />;\n\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n  const stats = [\n    { title: 'Price to USD', value: `$ ${cryptoDetails?.price && millify(cryptoDetails?.price)}`, icon: <DollarCircleOutlined /> },\n    { title: 'Rank', value: cryptoDetails?.rank, icon: <NumberOutlined /> },\n    { title: '24h Volume', value: `$ ${cryptoDetails?.volume && millify(cryptoDetails?.volume)}`, icon: <ThunderboltOutlined /> },\n    { title: 'Market Cap', value: `$ ${cryptoDetails?.marketCap && millify(cryptoDetails?.marketCap)}`, icon: <DollarCircleOutlined /> },\n    { title: 'All-time-high(daily avg.)', value: `$ ${cryptoDetails?.allTimeHigh?.price && millify(cryptoDetails?.allTimeHigh?.price)}`, icon: <TrophyOutlined /> },\n  ];\n\n  const genericStats = [\n    { title: 'Number Of Markets', value: cryptoDetails?.numberOfMarkets, icon: <FundOutlined /> },\n    { title: 'Number Of Exchanges', value: cryptoDetails?.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n    { title: 'Aprroved Supply', value: cryptoDetails?.supply?.confirmed ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n    { title: 'Total Supply', value: `$ ${cryptoDetails?.supply?.total && millify(cryptoDetails?.supply?.total)}`, icon: <ExclamationCircleOutlined /> },\n    { title: 'Circulating Supply', value: `$ ${cryptoDetails?.supply?.circulating && millify(cryptoDetails?.supply?.circulating)}`, icon: <ExclamationCircleOutlined /> },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {data?.data?.coin.name} ({data?.data?.coin.symbol}) Price\n        </Title>\n        <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\n      </Col>\n      <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\n        {time.map((date) => <Option key={date}>{date}</Option>)}\n      </Select>\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails?.price)} coinName={cryptoDetails?.name} />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\n          {HTMLReactParser(cryptoDetails.description)}\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\n          {cryptoDetails.links?.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">{link.type}</Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\n\nimport { Homepage, News, Cryptocurrencies, CryptoDetails, Navbar } from './components';\nimport './App.css';\n\nconst App = () => (\n  <div className=\"app\">\n    <div className=\"navbar\">\n      <Navbar />\n    </div>\n    <div className=\"main\">\n      <Layout>\n        <div className=\"routes\">\n          <Switch>\n            <Route exact path=\"/CryptoGalaxy\">\n              <Homepage />\n            </Route>\n            <Route exact path=\"/CryptoGalaxy/cryptocurrencies\">\n              <Cryptocurrencies />\n            </Route>\n            <Route exact path=\"/crypto/:coinId\">\n              <CryptoDetails />\n            </Route>\n            <Route exact path=\"/CryptoGalaxy/news\">\n              <News />\n            </Route>\n          </Switch>\n        </div>\n      </Layout>\n      <div className=\"footer\">\n        <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>Made by Aitik\n          <br />\n          All Rights Reserved.\n        </Typography.Title>\n        <Space>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/CryptoGalaxy/cryptocurrencies\">CryptoCurrencies</Link>\n          <Link to=\"/CryptoGalaxy/news\">News</Link>\n        </Space>\n      </div>\n    </div>\n  </div>\n);\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { cryptoApi } from '../services/cryptoApi';\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n});\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport store from './app/store';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}